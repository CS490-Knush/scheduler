---
swagger: "2.0"
info:
  description: "This is the API that will run on the Scheduling Server. \n[http://swagger.io](http://swagger.io)\
    \ or on \n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n"
  version: "1.0.0"
  title: "Scheduling Server"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "virtserver.swaggerhub.com"
basePath: "/cpsc490/scheduler/1.0.0"
schemes:
- "https"
- "http"
paths:
  /configure:
    post:
      summary: "Submit storage and computation nodes to be optimized for cplex"
      operationId: "submit_config"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Parameters for cplex to optimize with"
        required: true
        schema:
          $ref: "#/definitions/Parameters"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /submitJobs:
    post:
      summary: "Submit jobs to be run on configured server"
      operationId: "submit_jobs"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Jobs to be run on configured server"
        required: true
        schema:
          $ref: "#/definitions/JobParams"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/JobStatus"
        400:
          description: "Invalid status value"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions:
  Parameters:
    type: "object"
    required:
    - "computationNodes"
    - "storageNodes"
    properties:
      computationNodes:
        type: "array"
        example:
        - "10.0.0.1"
        - "10.0.0.2"
        items:
          type: "string"
      storageNodes:
        type: "array"
        example:
        - "10.0.0.3"
        - "10.0.0.4"
        items:
          type: "string"
      flag:
        type: "boolean"
    example:
      computationNodes:
      - "10.0.0.1"
      - "10.0.0.2"
      flag: true
      storageNodes:
      - "10.0.0.3"
      - "10.0.0.4"
  JobParams:
    type: "object"
    required:
    - "jobs"
    properties:
      jobs:
        type: "array"
        example:
        - dataFile: "tmp.txt"
          sparkProgram: "hi.py"
        items:
          $ref: "#/definitions/JobParams_jobs"
  JobStatus:
    type: "object"
    required:
    - "jobId"
    - "status"
    properties:
      jobId:
        type: "integer"
        format: "int32"
      status:
        type: "string"
        enum:
        - "processing"
        - "done"
        - "not found"
    example:
      jobId: 0
      status: "processing"
  JobParams_jobs:
    properties:
      dataFile:
        type: "string"
      sparkProgram:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
